# [searchbnf.conf](http://docs.splunk.com/Documentation/Splunk/latest/Admin/Searchbnfconf)
#Based on the Splunk SDK for python example http://dev.splunk.com/view/python-sdk/SP-CAAAEU2 countmatches.py, searchcommands_app
[streamfilter-command]
syntax = STREAMFILTER FIELDNAME=<field name in events> PATTERN=<field name containing regular_expression> <field_list from events>
alias =
shortdesc = Returns the non-overlapping matches to a regular expression in a search result.
description = \
    This command augments records with a single-value version of non-overlapping matches to the regular expression \
    specified by PATTERN. The result is stored in the field specified by FIELDNAME. If FIELDNAME exists, its value is \
    replaced. If FIELDNAME does not exist, it is created. Results are otherwise passed through to the next pipeline \
    processor unmodified.
comment1 = \
    This example returns the matching part of the text (field named text) of each tweet in the tweets lookup table and puts the result \
    in word_field.
example1 = \
    | inputlookup tweets | eval pattern="\\w+" | streamfilter fieldname=word_field pattern=pattern text
category = streaming
#appears-in = 1.2
usage = public
#tags = searchcommands_app

[streamfilterwildcard-command]
syntax = STREAMFILTERWILDCARD FIELDNAME=<field name in events> PATTERN=<field name containing wildcard pattern> <field_list from events>
alias =
shortdesc = Returns the non-overlapping matches to a wildcard pattern in a search result.
description = \
    This command augments records with a single-value version of non-overlapping matches to the wildcard pattern \
    specified by PATTERN. The result is stored in the field specified by FIELDNAME. If FIELDNAME exists, its value is \
    replaced. If FIELDNAME does not exist, it is created. Results are otherwise passed through to the next pipeline \
    processor unmodified.
comment1 = \
    This example returns the matching part of the text (field named text) of each tweet in the tweets lookup table and puts the result \
    in word_field.
example1 = \
    | inputlookup tweets | eval pattern="a*" | streamfilterwildcard fieldname=word_field pattern=pattern text
category = streaming
#appears-in = 1.2
usage = public
#tags = searchcommands_app

